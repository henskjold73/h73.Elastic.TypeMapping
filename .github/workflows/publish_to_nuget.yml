name: publish to nuget
on:
  push:
    branches:
      - master # Default release branch
jobs:
  publish:
    name: build, pack & publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Fetch tags
        run: git fetch --tags

      - name: GitVersion setup
        uses: actions/setup-gitversion@v1.0.0
        with:
          gitversion-version: 5.1.1
      - name: GitVersion
        run: GitVersion
  
      - name: Output version values 
        run: |
          echo "NuGetVersion: ${{ steps.gitversion.outputs.NuGetVersion }}"
          echo "NuGetPreReleaseTagV2: ${{ steps.gitversion.outputs.NuGetPreReleaseTagV2 }}"
          echo "NuGetPreReleaseTag: ${{ steps.gitversion.outputs.NuGetPreReleaseTag }}"
      
      
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.301     
            
      # Publish
      - name: publish on version change
        id: publish_nuget
        uses: rohith/publish-nuget@v2
        with:
          # Filepath of the project to be packaged, relative to root of repository
          PROJECT_FILE_PATH: h73.Elastic.TypeMapping/h73.Elastic.TypeMapping.csproj
          
          # NuGet package id, used for version detection & defaults to project name
          PACKAGE_NAME: h73.Elastic.TypeMapping
          
          # Useful with external providers like Nerdbank.GitVersioning, ignores VERSION_FILE_PATH & VERSION_REGEX
          VERSION_STATIC: ${{ steps.gitversion.outputs.NuGetVersion }}

          # Flag to toggle git tagging, enabled by default
          TAG_COMMIT: true

          # Format of the git tag, [*] gets replaced with actual version
          TAG_FORMAT: v*

          # API key to authenticate with NuGet server
          NUGET_KEY: ${{secrets.NUGET_API_KEY}}
